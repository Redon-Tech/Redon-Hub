{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"Redon Hub"},{"location":"#overview","title":"Overview","text":"<p>Redon Hub is a Roblox Product Delivery System (AKA Product Hub). This system is designed for self-hosting with multiple options for data storage to suit your needs. It is designed to be as easy to use as possible, while still being powerful and flexible.</p> <p>This system is designed to be as powerfull as other hubs such as myPod, Parcel, and more, while being fully customizable, 100% open source, and free to use.</p> <p>This system is still in development and is not ready for use. Use at your own risk.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Multiple Data Storage Options (SQLite, MySQL, PostgreSQL, MongoDB, and more)</li> <li>Product Delivery System (Automatically DMs the user the product)</li> <li>Discord Bot (Fully control your system via Discord)</li> <li>API (Fully control your system via API)</li> </ul>"},{"location":"#planned-features","title":"Planned Features","text":"<ul> <li>Open Cloud Support</li> <li>Product Testing</li> <li>Monthly Subscriptions</li> <li>Product Loaning (Loan a product for a set time to another user)</li> <li>Product Licenses (Must purchase a product for each group/user using it)</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Read the Setup Guide for more information.</p>"},{"location":"guide/api/","title":"API","text":""},{"location":"guide/commands/","title":"Commands","text":"<p>Overview of the bot's commands. All commands that include \"admin\" can only be used by admins in the server.</p>"},{"location":"guide/commands/#verify-commands","title":"Verify Commands","text":""},{"location":"guide/commands/#link","title":"Link","text":"<p>Syntax</p> <p><code>/verify link &lt;key&gt;</code></p> <p>Description</p> <p>Link your Discord account to your Roblox account using a key generated by the API. </p> <p>Arguments</p> <ul> <li><code>key</code> - The key generated by the API.</li> </ul>"},{"location":"guide/commands/#unlink","title":"Unlink","text":"<p>Syntax</p> <p><code>/verify unlink</code></p> <p>Description</p> <p>Unlink your Discord account to your Roblox account. All purchases are saved to the Roblox account.</p> <p>Arguments</p> <p>None</p>"},{"location":"guide/commands/#profile","title":"Profile","text":"<p>Syntax</p> <p><code>/profile &lt;member&gt;</code></p> <p>Description</p> <p>View a user's profile which contains info stored about the user.</p> <p>Arguments</p> <ul> <li><code>member</code> - The member to view the profile of. [Optional]</li> </ul>"},{"location":"guide/commands/#retrieve","title":"Retrieve","text":"<p>Syntax</p> <p><code>/retrieve &lt;product&gt;</code></p> <p>Description</p> <p>Retrieve a product file that you own.</p> <p>Arguments</p> <ul> <li><code>product</code> - The name of the product.</li> </ul>"},{"location":"guide/commands/#transfer","title":"Transfer","text":"<p>Syntax</p> <p><code>/transfer &lt;product&gt; &lt;member&gt;</code></p> <p>Description</p> <p>Transfer your product to another member.</p> <p>Arguments</p> <ul> <li><code>product</code> - The name of the product.</li> <li><code>member</code> - The member to transfer the product to.</li> </ul>"},{"location":"guide/commands/#user-commands","title":"User Commands","text":""},{"location":"guide/commands/#give","title":"Give","text":"<p>Syntax</p> <p><code>/user admin give &lt;product&gt; &lt;member&gt;</code></p> <p>Description</p> <p>Give a user a product.</p> <p>Arguments</p> <ul> <li><code>product</code> - The name of the product.</li> <li><code>member</code> - The member to give the product to.</li> </ul>"},{"location":"guide/commands/#revoke","title":"Revoke","text":"<p>Syntax</p> <p><code>/user admin revoke &lt;product&gt; &lt;member&gt;</code></p> <p>Description</p> <p>Revoke a user's product.</p> <p>Arguments</p> <ul> <li><code>product</code> - The name of the product.</li> <li><code>member</code> - The member to revoke the product from.</li> </ul>"},{"location":"guide/commands/#products","title":"Products","text":"<p>Syntax</p> <p><code>/products</code></p> <p>Description</p> <p>View all products that are available for purchase.</p> <p>Arguments</p> <p>None</p>"},{"location":"guide/commands/#product-commands","title":"Product Commands","text":""},{"location":"guide/commands/#info","title":"Info","text":"<p>Syntax</p> <p><code>/product info &lt;product&gt;</code></p> <p>Description</p> <p>View info about a product.</p> <p>Arguments</p> <ul> <li><code>product</code> - The name of the product.</li> </ul>"},{"location":"guide/commands/#stats","title":"Stats","text":"<p>Syntax</p> <p><code>/product admin stats &lt;product&gt;</code></p> <p>Description</p> <p>View stats about a product.</p> <p>Arguments</p> <ul> <li><code>product</code> - The name of the product.</li> </ul>"},{"location":"guide/commands/#create","title":"Create","text":"<p>Syntax</p> <p><code>/product admin create</code></p> <p>Description</p> <p>Create a product.</p> <p>Arguments</p> <p>None</p>"},{"location":"guide/commands/#delete","title":"Delete","text":"<p>Syntax</p> <p><code>/product admin delete &lt;product&gt;</code></p> <p>Description</p> <p>Delete a product.</p> <p>Arguments</p> <ul> <li><code>product</code> - The name of the product.</li> </ul>"},{"location":"guide/commands/#update","title":"Update","text":"<p>Syntax</p> <p><code>/product admin update &lt;product&gt;</code></p> <p>Description</p> <p>Update a product.</p> <p>Arguments</p> <ul> <li><code>product</code> - The name of the product.</li> </ul>"},{"location":"guide/commands/#clear","title":"Clear","text":"<p>Syntax</p> <p><code>/product admin clear</code></p> <p>Description</p> <p>Delete all products.</p> <p>Arguments</p> <p>None</p>"},{"location":"guide/commands/#tags","title":"Tags","text":"<p>Syntax</p> <p><code>/tags</code></p> <p>Description</p> <p>View all tags.</p> <p>Arguments</p> <p>None</p>"},{"location":"guide/commands/#tag-commands","title":"Tag Commands","text":""},{"location":"guide/commands/#info_1","title":"Info","text":"<p>Syntax</p> <p><code>/tag info &lt;tag&gt;</code></p> <p>Description</p> <p>View info about a tag.</p> <p>Arguments</p> <ul> <li><code>tag</code> - The name of the tag.</li> </ul>"},{"location":"guide/commands/#create_1","title":"Create","text":"<p>Syntax</p> <p><code>/tag admin create</code></p> <p>Description</p> <p>Create a tag.</p> <p>Arguments</p> <p>None</p>"},{"location":"guide/commands/#delete_1","title":"Delete","text":"<p>Syntax</p> <p><code>/tag admin delete</code></p> <p>Description</p> <p>Delete a tag.</p> <p>Arguments</p> <p>None</p>"},{"location":"guide/commands/#update_1","title":"Update","text":"<p>Syntax</p> <p><code>/tag admin update &lt;tag&gt;</code></p> <p>Description</p> <p>Update a tag.</p> <p>Arguments</p> <ul> <li><code>tag</code> - The name of the tag.</li> </ul>"},{"location":"guide/commands/#migrate","title":"Migrate","text":"<p>Syntax</p> <p><code>/migrate</code></p> <p>Description</p> <p>Migrate data from other providers.</p> <p>Arguments</p> <p>None</p>"},{"location":"guide/themes/","title":"Themes","text":"<p>We have a couple pre-made themes that you can use. You can also make your own theme if you want. If you do make your own theme please consider making a pull request to add it to the repository!</p>"},{"location":"guide/themes/#pre-made-themes","title":"Pre-made Themes","text":"Default <p> parker02311 (Inspired by Bootswatch) </p> Cyborg <p> Bootswatch </p> Catppuccin Latte <p> Catppuccin </p> Catppuccin Mocha <p> Catppuccin </p>"},{"location":"setup/overview/","title":"Overview","text":"<p>Warning</p> <p>The system is in full release, however there may still be bugs due to a lack of testers. Please understand that the system is not perfect and may have bugs. If you find a bug please report it via GitHub.</p>"},{"location":"setup/overview/#video-guide","title":"Video Guide","text":"<p>You can watch a video guide on how to setup the system here.</p> Warning <p>This video could become outdated in the future. If you are having issues please refer to the text guide.</p>"},{"location":"setup/overview/#overview","title":"Overview","text":"<p>Redon Hub is designed to be as easy as possible to use. However, it is still a complex system. This guide will walk you through the installation process. If you need assistance you can ask in our Discord server, but please keep in mind this process is not easy and you should only attempt it if you have experience with databases and Discord bots.</p>"},{"location":"setup/overview/#requirements","title":"Requirements","text":"<ul> <li>A computer or server to host the system on<ul> <li>To be able to recieve Roblox requests you must have a port open</li> <li>It must be online 24/7</li> <li>If you are unable to achieve either of these we provide a hosting service for a small fee (limited free slots avaliable)</li> </ul> </li> <li>Currently you must have either a relational database (MySQL, PostgreSQL, etc.) or MongoDB ready.</li> <li>Have a Discord bot token ready.</li> <li>Python 3.9+ installed (With pip)</li> <li>Git installed (Optional, faster for setup)</li> </ul> Hosting at home <p>I will not be providing any support with port forwarding, I recommend you use a hosting service. If you are unable to figure out how to use a hosting service we provide one.</p> <p>Roblox Setup Setup Bot Setup Bot on Pterodactyl</p>"},{"location":"setup/bot/hosting/","title":"Hosting","text":"<p>This bot can be hosted virtually anywhere Python 3.9+ can run and there is a internet connection. While this does include hosting at home it is still something we do not recommend and there are many VPS providers, discord bot hosting providers, and even free hosting providers that you can use.</p> <p>Obviously we recommend using our hosting service, but if you are unable to use it or do not want to use it we have provided a list of other hosting providers below.</p>"},{"location":"setup/bot/hosting/#pterodactyl-panel-hosting","title":"Pterodactyl Panel Hosting","text":"<p>If you host a pterodactyl panel you can download our egg for easy installation. You can find the egg here.</p> <p>This is the easiest other then Redon Hosting and Embotic</p>"},{"location":"setup/bot/hosting/#recommended-hosting-providers","title":"Recommended Hosting Providers","text":"<ul> <li>Redon Hosting (Free<sup>1</sup>, Paid Plans Available)</li> <li>Embotic (Free, provides preinstall for Redon Hub)</li> <li>PebbleHost (Cheap, but does not provide preinstall for Redon Hub)</li> </ul> <p>(I will add more as I find them, if you know of any please let me know in our Discord server)</p>"},{"location":"setup/bot/hosting/#vps-providers","title":"VPS Providers","text":"<p>All of these require debit/credit cards to use, most do not accept prepaid cards.</p> <ul> <li>Oracle Cloud (Free, difficult to get started)</li> <li>DigitalOcean</li> <li>Vultr</li> <li>Linode</li> <li>AWS</li> <li>Google Cloud</li> <li>Azure</li> <li>Onetsolutions (Cheap, but limited English support)</li> <li>Find More</li> </ul> <ol> <li> <p>Due to limited resources, we are only able to provide free hosting to a limited number of people. Free servers also come with very limited resources and should not be used for large servers.\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/bot/local/configuration/","title":"Configuration","text":"<p>This guide is the next part after setting up the database. If you have not setup the database yet please do so before continuing.</p>"},{"location":"setup/bot/local/configuration/#creating-the-json-file","title":"Creating the JSON File","text":"<p>The bot uses a mix of both a <code>config.json</code> and a <code>.env</code> file for configuration. The <code>config.json</code> file is used for configuration that is not sensitive and can be shared publicly. The <code>.env</code> file is used for sensitive information such as tokens and database connection strings. To create the <code>config.json</code> file we will copy the <code>example.config.json</code> file and rename it to <code>config.json</code>. We can do this with the following.</p> WindowsLinux <p> </p> <pre><code>cp config.example.json config.json\n</code></pre>"},{"location":"setup/bot/local/configuration/#configuration-explained","title":"Configuration Explained","text":"<p>Now that we have our <code>config.json</code> file we can start configuring it. Below is a list of all the options and what they do. <pre><code>{\n    \"Bot\": {\n        \"Prefix\": \".\",\n        \"Guilds\": [\n            1234567890\n        ],\n        \"Owners\": [\n            1234567890\n        ],\n        \"Activity\": {\n            \"Presence\": \"watching {users:,} costumers \u2022 Version {version}\",\n            \"Status\": \"online\"\n        }\n    },\n    \"Logging\": {\n        \"PurchasesChannel\": 1234567890,\n        \"GlobalCustomerRole\": 1234567890\n    },\n    \"Data\": {\n        \"Database\": \"mysql|postgresql|mongodb|\"\n    },\n    \"API\": {\n        \"IP\": \"0.0.0.0\",\n        \"Port\": 5000,\n        \"Key\": \"CHANGEME\"\n    }\n}\n</code></pre></p> <ul> <li>Bot:<ul> <li>Prefix: The prefix the bot will use for commands. (Unused)</li> <li>Guilds: A list of guilds the slash commands will be in.<sup>1</sup></li> <li>Owners: A list of user IDs that will be able to use owner commands.</li> <li>Activity:<ul> <li>Presence: The presence the bot will use. Supports the following variables:<ul> <li><code>{users:,}</code>: The number of users in the database.</li> <li><code>{guilds:,}</code>: The number of guilds the bot is in.</li> <li><code>{version}</code>: The version of the bot.</li> <li><code>{prefix}</code>: The prefix of the bot. (Unused)</li> </ul> </li> <li>Status: The status the bot will use. Learn More</li> </ul> </li> </ul> </li> <li>Logging:<ul> <li>PurchasesChannel: The channel ID of the channel the bot will log purchases in.</li> <li>GlobalCustomerRole: The role ID of the role the bot will give to customers of all products.</li> </ul> </li> <li>Data:<ul> <li>Database: The type of database being used. If you are using MariaDB make sure to use <code>mysql</code>.</li> </ul> </li> <li>API:<ul> <li>IP: The IP the API will listen on. (Best left as <code>\"0.0.0.0\"</code>)</li> <li>Port: The port the API will listen on. (This port must be open to the internet)</li> <li>Key: The key the API will use for authentication. (This key must be kept secret)</li> </ul> </li> </ul>"},{"location":"setup/bot/local/configuration/#finishing-the-env-file","title":"Finishing the .env file","text":"<p>Now that we have our <code>config.json</code> file we can finish our <code>.env</code> file. To do this we will add the following to the <code>.env</code> file. Replace the values with your own.</p> <pre><code>token=this_is_your_bot_token\n</code></pre> <p>Next: Starting the Bot</p> <ol> <li> <p>The first guild in this list will also be the guild the bot will use for customer roles and the purchase channel.\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/bot/local/database/","title":"Database Setup","text":"<p>This guide is the next part after installing the system. If you have not installed the system yet please do so before continuing.</p> <p>Warning</p> <p>The bot was developed and tested on MariaDB (MySQL) and in our current state of development we have not tested any other databases yet. If you have any issues with other databases please let us know in our Discord server. Details on supported databases.</p>"},{"location":"setup/bot/local/database/#connection-string","title":"Connection String","text":"<p>After you have choosen the database type you are going to use, make the connector string and save it for later. You will need it in the next step. Get help with connection strings</p> Example <pre><code>mysql://USER:PASSWORD@HOST:PORT/DATABASE\n</code></pre>"},{"location":"setup/bot/local/database/#setting-up-env-variables","title":"Setting Up ENV Variables","text":"<p>Now that we have our database setup we need to configure the bot to use it. To do this we will use a .env file. This file will contain all of our environment variables that the bot will use. To create the .env file we can do the following.</p> WindowsLinux <p> </p> <pre><code>touch .env\n</code></pre> <p>Now we will add the following to the .env file. Replace the values with your own. <pre><code>token=we_will_come_back_to_this_later\ndatabase=mysql://USER:PASSWORD@HOST:PORT/DATABASE\n</code></pre></p>"},{"location":"setup/bot/local/database/#using-prisma","title":"Using Prisma","text":"<p>We use Prisma to manage our database. To setup Prisma we will use the following command.</p> Relational DatabaseMySQL (MariaDB)MongoDB <ul> <li>Windows <pre><code>python -m prisma generate --schema relational-schema.prisma\n\n# Using db push is not always the best way to do this, however it is the easiest.\npython -m prisma db push --schema relational-schema.prisma\n</code></pre></li> <li>Linux <pre><code>python3 -m prisma generate --schema relational-schema.prisma\n\n# Using db push is not always the best way to do this, however it is the easiest.\npython3 -m prisma db push --schema relational-schema.prisma\n</code></pre></li> </ul> <ul> <li>Windows <pre><code>python -m prisma generate --schema mysql-schema.prisma\n\n# Using db push is not always the best way to do this, however it is the easiest.\npython -m prisma db push --schema mysql-schema.prisma\n</code></pre></li> <li>Linux <pre><code>python3 -m prisma generate --schema mysql-schema.prisma\n\n# Using db push is not always the best way to do this, however it is the easiest.\npython3 -m prisma db push --schema mysql-schema.prisma\n</code></pre></li> </ul> <ul> <li>Windows <pre><code>python -m prisma generate --schema mongodb-schema.prisma\n\n# Using db push is not always the best way to do this, however it is the easiest.\npython -m prisma db push --schema mongodb-schema.prisma\n</code></pre></li> <li>Linux <pre><code>python3 -m prisma generate --schema mongodb-schema.prisma\n\n# Using db push is not always the best way to do this, however it is the easiest.\npython3 -m prisma db push --schema mongodb-schema.prisma\n</code></pre></li> </ul> <p>Next: Configuration</p>"},{"location":"setup/bot/local/running/","title":"Starting the Bot","text":"<p>This guide is the next part after configuration. If you have not configured the bot yet please do so before continuing.</p>"},{"location":"setup/bot/local/running/#inviting-the-bot","title":"Inviting the Bot","text":"<p>Before we can run the bot we need to invite it to our guild. To do this we will do the following:</p> <p>Scopes Required: </p> <ul> <li><code>applications.commands</code>: This is required for the bot to create slash commands.</li> <li><code>bot</code>: This is required for the bot to join the guild.</li> </ul> <p>Permissions Required: </p> <ul> <li><code>Administrator</code>: This is the easiest way to ensure the bot has all the permissions it needs.</li> </ul> <p>Ensure Proper Permissions and Scopes</p> <p>If you do not give the bot proper permissions or scopes, commands may not work correctly or not even appear.</p> Warning about Administrator Permissions <p>Giving the bot administrator permissions is not recommended. If you do, please ensure to not leak the token.</p>"},{"location":"setup/bot/local/running/#running-the-bot","title":"Running the Bot","text":"<p>The easiest part of this entire guide, running the bot. To run the bot we will use the following command.</p> WindowsLinux <pre><code>python launcher.py\n</code></pre> <pre><code>python3 launcher.py\n</code></pre> <p>Warning</p> <p>If you are running the bot on a server you should use a process manager such as <code>screen</code> or <code>systemd</code>.</p> Hosting at home <p>I will not be providing any support with port forwarding, I recommend you use a hosting service. If you are unable to figure out how to use a hosting service we provide one.</p>"},{"location":"setup/bot/local/running/#next-steps","title":"Next Steps","text":"<p>Now that you have the bot running you can start using it. If you need help with commands see commands guide to get a list of commands. If you need help with anything else you can ask in our Discord server.</p>"},{"location":"setup/bot/local/setup/","title":"Setup","text":"<p>Before we get to setting up our database and configuring the bot we must first install the system. To do this we will use git to clone the repository. If you do not have git installed you can download it here.</p> <ol> <li>Open a terminal and navigate to the directory you want to install the system in.</li> <li> <p>Download the repository</p> <ul> <li>Via Git: <pre><code>git clone https://github.com/Redon-Tech/Redon-Hub.git\n\n# Get the latest release version\n# if you want the latest development version do not run this.\ngit checkout $(git describe --tags $(git rev-list --tags --max-count=1))\n</code></pre></li> <li>Via Zipfile:<ol> <li>Download the source code from GitHub.</li> <li>Extract contents into your install directory.</li> </ol> </li> </ul> </li> <li> <p>Enter a pipenv</p> </li> </ol> WindowsLinux <pre><code>cd Redon-Hub\n\npython -m pip install pipenv\n\npython -m pipenv install\n\npython -m pipenv shell\n</code></pre> <pre><code>cd Redon-Hub\n\npip install pipenv\n\npipenv install\n\npipenv shell\n</code></pre> <ol> <li>Install the requirements (only if the pipenv does not automatically install them)</li> </ol> WindowsLinux <pre><code>python -m pip install -U -r requirements.txt\n</code></pre> <pre><code>pip install -U -r requirements.txt\n</code></pre> <p>Next: Database Setup</p>"},{"location":"setup/bot/pterodactyl/configuration/","title":"Configuration","text":"<p>This guide is the next part after setting up the database. If you have not setup the database yet please do so before continuing.</p>"},{"location":"setup/bot/pterodactyl/configuration/#creating-the-json-file","title":"Creating the JSON File","text":"<p>The bot uses a mix of both a <code>config.json</code> and a <code>.env</code> file for configuration. The <code>config.json</code> file is used for configuration that is not sensitive and can be shared publicly. The <code>.env</code> file is used for sensitive information such as tokens and database connection strings. To create the <code>config.json</code> file we will copy the <code>example.config.json</code> file and rename it to <code>config.json</code>. We can do this with the following.</p> <p>Common Configuration Mistake</p> <p>Please ensure that you change <code>Data.Database</code> to <code>mysql</code>. </p> <p>If you do not, the bot will not work correctly.</p>"},{"location":"setup/bot/pterodactyl/configuration/#configuration-explained","title":"Configuration Explained","text":"<p>Now that we have our <code>config.json</code> file we can start configuring it. Below is a list of all the options and what they do. <pre><code>{\n    \"Bot\": {\n        \"Prefix\": \".\",\n        \"Guilds\": [\n            1234567890\n        ],\n        \"Owners\": [\n            1234567890\n        ],\n        \"Activity\": {\n            \"Presence\": \"watching {users:,} costumers \u2022 Version {version}\",\n            \"Status\": \"online\"\n        }\n    },\n    \"Logging\": {\n        \"PurchasesChannel\": 1234567890,\n        \"GlobalCustomerRole\": 1234567890\n    },\n    \"Data\": {\n        \"Database\": \"mysql|postgresql|mongodb|\"\n    },\n    \"API\": {\n        \"IP\": \"0.0.0.0\",\n        \"Port\": 5000,\n        \"Key\": \"CHANGEME\"\n    }\n}\n</code></pre></p> <ul> <li>Bot:<ul> <li>Prefix: The prefix the bot will use for commands. (Unused)</li> <li>Guilds: A list of guilds the slash commands will be in.<sup>1</sup></li> <li>Owners: A list of user IDs that will be able to use owner commands.</li> <li>Activity:<ul> <li>Presence: The presence the bot will use. Supports the following variables:<ul> <li><code>{users:,}</code>: The number of users in the database.</li> <li><code>{guilds:,}</code>: The number of guilds the bot is in.</li> <li><code>{version}</code>: The version of the bot.</li> <li><code>{prefix}</code>: The prefix of the bot. (Unused)</li> </ul> </li> <li>Status: The status the bot will use. Learn More</li> </ul> </li> </ul> </li> <li>Logging:<ul> <li>PurchasesChannel: The channel ID of the channel the bot will log purchases in.</li> <li>GlobalCustomerRole: The role ID of the role the bot will give to customers of all products.</li> </ul> </li> <li>Data:<ul> <li>Database: The type of database being used. If you are using MariaDB make sure to use <code>mysql</code>.</li> </ul> </li> <li>API:<ul> <li>IP: The IP the API will listen on. (Best left as <code>\"0.0.0.0\"</code>)</li> <li>Port: The port the API will listen on. (This port must be open to the internet)</li> <li>Key: The key the API will use for authentication. (This key must be kept secret)</li> </ul> </li> </ul> <p>Common Configuration Mistake</p> <p>Please ensure <code>API.Port</code> is set to the port of your server. You can find it on the console page.</p> <p>It is the number after the <code>:</code> in the URL.</p> <p>For example, <code>node5.redon.tech:12345</code> would have a port of <code>12345</code>.</p>"},{"location":"setup/bot/pterodactyl/configuration/#finishing-the-env-file","title":"Finishing the .env file","text":"<p>Now that we have our <code>config.json</code> file we can finish our <code>.env</code> file. To do this we will add the following to the <code>.env</code> file. Replace the values with your own.</p> <pre><code>token=this_is_your_bot_token\n</code></pre> <p>Next: Starting the Bot</p> <ol> <li> <p>The first guild in this list will also be the guild the bot will use for customer roles and the purchase channel.\u00a0\u21a9</p> </li> </ol>"},{"location":"setup/bot/pterodactyl/database/","title":"Database Setup","text":"<p>This guide is the next part after installing the system. If you have not installed the system yet please do so before continuing.</p> <p>Database Required</p> <p>The Pterodactyl egg is designed for MySQL (MariaDB) only. If you are using a different database the hosting provider will need to modify your egg.</p>"},{"location":"setup/bot/pterodactyl/database/#creating-database","title":"Creating Database","text":"<p>If your hosting provider allows you to create a database. If not, you will need to either contact your hosting provider or find a database hosting provider.</p> <p>Redon Tech hosting provides you with a database. You can create a database by following the steps below.</p> <p>Common Database String Issues</p> <p>If you use the connection string provided by the panel, you will need to remove the <code>jdbc:</code> from the beginning of the string. </p> <p>The connection string should look like this <code>mysql://USER:PASSWORD@HOST:PORT/DATABASE</code>.</p>"},{"location":"setup/bot/pterodactyl/database/#connection-string","title":"Connection String","text":"<p>After you have choosen the database type you are going to use, make the connector string and save it for later. You will need it in the next step. Get help with connection strings</p> Example <pre><code>mysql://USER:PASSWORD@HOST:PORT/DATABASE\n</code></pre>"},{"location":"setup/bot/pterodactyl/database/#setting-up-env-variables","title":"Setting Up ENV Variables","text":"<p>Now that we have our database setup we need to configure the bot to use it. To do this we will use a .env file. This file will contain all of our environment variables that the bot will use. To create the .env file we can do the following.</p> <p>Replace the values with your own.</p>"},{"location":"setup/bot/pterodactyl/database/#using-prisma","title":"Using Prisma","text":"<p>We use Prisma to manage our database. To setup Prisma we will do the following.</p> <ol> <li>Click the \"Startup\" tab.</li> <li>Enable \"DB Push\".</li> </ol> <p>Next: Configuration</p>"},{"location":"setup/bot/pterodactyl/running/","title":"Starting the Bot","text":"<p>This guide is the next part after configuration. If you have not configured the bot yet please do so before continuing.</p>"},{"location":"setup/bot/pterodactyl/running/#inviting-the-bot","title":"Inviting the Bot","text":"<p>Before we can run the bot we need to invite it to our guild. To do this we will do the following:</p> <p>Scopes Required: </p> <ul> <li><code>applications.commands</code>: This is required for the bot to create slash commands.</li> <li><code>bot</code>: This is required for the bot to join the guild.</li> </ul> <p>Permissions Required: </p> <ul> <li><code>Administrator</code>: This is the easiest way to ensure the bot has all the permissions it needs.</li> </ul> <p>Ensure Proper Permissions and Scopes</p> <p>If you do not give the bot proper permissions or scopes, commands may not work correctly or not even appear.</p> Warning about Administrator Permissions <p>Giving the bot administrator permissions is not recommended. If you do, please ensure to not leak the token.</p>"},{"location":"setup/bot/pterodactyl/running/#running-the-bot","title":"Running the Bot","text":"<p>The easiest part of this entire guide, running the bot. To run the bot we will do the following:</p> <ol> <li>Click the \"Console\" tab.</li> <li>Click \"Start\" to start the bot.</li> <li>After the bot has started go back to the \"Startup\" tab.</li> <li>Disable \"DB Push\".</li> </ol>"},{"location":"setup/bot/pterodactyl/running/#next-steps","title":"Next Steps","text":"<p>Now that you have the bot running you can start using it. If you need help with commands see commands guide to get a list of commands. If you need help with anything else you can ask in our Discord server.</p>"},{"location":"setup/bot/pterodactyl/setup/","title":"Setup","text":"<p>Before we get to setting up our database and configuring the bot we must first install the system. This is different depending on each hosting provider but the process will generally be the same. </p> <ol> <li>You need to purchase a Redon Hub server from your hosting provider, every provider does this in a different way.</li> <li>Once you have purchased a Redon Hub server you need to login and familiarize yourself with the panel.</li> <li>Next you will need to setup a database, this is also dependent on your provider, consult their documentation.</li> </ol> <p>Follow The Guide</p> <p>Next: Database Setup</p>"},{"location":"setup/bot/pterodactyl/setup/#follow-the-guide-word-word","title":"Follow the guide word-word","text":"<p>If you encounter problems, it is most likely that you have missed a step.</p> <p>If you are still having issues after following the guide, please contact your hosting provider.</p>"},{"location":"setup/roblox/configuration/","title":"Configuration","text":"<p>This guide is the next part after setting up the place. If you have not setup a place yet please do so before continuing.</p>"},{"location":"setup/roblox/configuration/#finding-the-configuration-module","title":"Finding the Configuration module","text":"<p>The configuration file is located in ServerScriptService under the name <code>Configuration</code>. You can find it by searching for it in the explorer.</p>"},{"location":"setup/roblox/configuration/#configuration-explained","title":"Configuration Explained","text":"<p>Now that we have our configuration module we can start configuring it. Below is a list of all the options and what they do. <pre><code>--// Server Communication Configuration \\\\--\nSettings.ServerAddress = \"http://x.x.x.x:xxxx/\"\nSettings.APIKey = \"exampleapikey\"\n\n--// UI Configuration \\\\--\nSettings.BrandName = \"Redon Tech\"\nSettings.BrandImage = \"http://www.roblox.com/asset/?id=13255176500\"\nSettings.AboutUs = [[\nRedon Tech Is A Tech Company\nYou can make new lines by just hitting enter\n\n&lt;b&gt;Supports rich text!&lt;/b&gt;\nhttps://create.roblox.com/docs/building-and-visuals/ui/rich-text\n]]\n\nSettings.FeaturedProduct = \"test\"\n\nSettings.UseCustomColors = false\nSettings.Colors = {\n    Background = Color3.fromRGB(15, 37, 55),\n    BackgroundAccent = Color3.fromRGB(32, 55, 76),\n\n    Primary = Color3.fromRGB(65, 132, 197),\n    Secondary = Color3.fromRGB(66, 79, 92),\n    Success = Color3.fromRGB(78, 156, 78),\n    Info = Color3.fromRGB(77, 163, 189),\n    Warning = Color3.fromRGB(217, 164, 6),\n    Danger = Color3.fromRGB(184, 71, 67),\n    Light = Color3.fromRGB(145, 155, 165),\n    Dark = Color3.fromRGB(32, 55, 76),\n\n    TextColor = Color3.fromRGB(255, 255, 255),\n    AccentTextColor = Color3.fromRGB(0, 0, 0),\n\n    ImageAccentColor = Color3.fromRGB(148, 166, 180),\n}\n</code></pre></p> <ul> <li>ServerAddress: The address of the server. This is usually the IP address of the server. Must start with <code>http</code> or <code>https</code></li> <li>APIKey: The API key of the server. This is used to authenticate requests to the server. You can find this in the <code>config.json</code> file of the bot.</li> <li>BrandName: The name of the brand. This is displayed in the top left of the UI.</li> <li>BrandImage: The image of the brand. This is displayed in the top left of the UI. Must be <code>rbxassetid://</code> or <code>http://www.roblox.com/asset/?id=</code>.</li> <li>AboutUs: A multi-line string that is displayed on the about us page. Supports rich text.</li> <li>FeaturedProduct: The product name of the featured product. This is displayed on the home page.</li> </ul> <p>Custom Colors:</p> <ul> <li>UseCustomColors: Whether or not to use custom colors. If this is set to false the colors will be set to the default theme colors.</li> <li>Colors:<ul> <li>All of these are pretty self explanatory. They are the colors used in the UI. You can use this tool to find the RGB values of colors.</li> </ul> </li> </ul>"},{"location":"setup/roblox/setup/","title":"Setup","text":"<p>Setting up the Roblox place is much easier than setting up the bot. Before you can start setting up your Roblox place you must make sure that your API can be accessed by the entire internet and not just your local network. If you can not figure out how to you will need to use a hosting provider.</p> <ol> <li>Select a theme</li> <li>Download latest release of theme</li> <li>Publish the place to Roblox</li> </ol> <p>Next: Configuration</p>"}]}